"""
Theme Test Widget for checking contrast and readability
"""

from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel, QPushButton,
    QGroupBox, QListWidget, QTreeWidget, QTreeWidgetItem,
    QComboBox, QCheckBox, QLineEdit, QTextEdit, QProgressBar,
    QTabWidget, QSplitter
)
from PyQt6.QtCore import Qt


class ThemeTestWidget(QWidget):
    """Widget for testing theme contrast and readability"""

    def __init__(self):
        super().__init__()
        self.setup_ui()

    def setup_ui(self):
        """Setup test interface with all UI elements"""
        main_layout = QVBoxLayout(self)

        # Header
        header = QLabel("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç–∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã")
        header.setStyleSheet("font-size: 16px; font-weight: bold; margin: 10px;")
        main_layout.addWidget(header)

        # Create splitter for organized layout
        splitter = QSplitter(Qt.Orientation.Horizontal)

        # Left panel: Controls and Forms
        left_panel = self.create_left_panel()
        splitter.addWidget(left_panel)

        # Right panel: Lists and Trees
        right_panel = self.create_right_panel()
        splitter.addWidget(right_panel)

        main_layout.addWidget(splitter)

        # Bottom panel: Status and Progress
        bottom_panel = self.create_bottom_panel()
        main_layout.addWidget(bottom_panel)

        # Set splitter proportions
        splitter.setSizes([400, 400])

    def create_left_panel(self):
        """Create left panel with buttons, forms, and controls"""
        panel = QWidget()
        layout = QVBoxLayout(panel)

        # Buttons section
        buttons_group = QGroupBox("üéõÔ∏è –ö–Ω–æ–ø–∫–∏")
        buttons_layout = QVBoxLayout(buttons_group)

        # Regular buttons
        btn_layout = QHBoxLayout()
        btn_layout.addWidget(QPushButton("–û–±—ã—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞"))
        btn_layout.addWidget(QPushButton("üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞"))
        btn_layout.addWidget(QPushButton("‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞"))
        buttons_layout.addLayout(btn_layout)

        # Styled buttons
        styled_layout = QHBoxLayout()
        success_btn = QPushButton("‚úÖ –£—Å–ø–µ—Ö")
        success_btn.setProperty("class", "success")
        danger_btn = QPushButton("‚ùå –û—à–∏–±–∫–∞")
        danger_btn.setProperty("class", "danger")
        warning_btn = QPushButton("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
        warning_btn.setProperty("class", "warning")

        styled_layout.addWidget(success_btn)
        styled_layout.addWidget(danger_btn)
        styled_layout.addWidget(warning_btn)
        buttons_layout.addLayout(styled_layout)

        # Disabled button
        disabled_btn = QPushButton("üö´ –û—Ç–∫–ª—é—á–µ–Ω–∞")
        disabled_btn.setEnabled(False)
        buttons_layout.addWidget(disabled_btn)

        layout.addWidget(buttons_group)

        # Forms section
        forms_group = QGroupBox("üìù –§–æ—Ä–º—ã")
        forms_layout = QVBoxLayout(forms_group)

        # Text input
        forms_layout.addWidget(QLabel("–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ:"))
        text_input = QLineEdit()
        text_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏...")
        forms_layout.addWidget(text_input)

        # Combo box
        forms_layout.addWidget(QLabel("–í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫:"))
        combo = QComboBox()
        combo.addItems([
            "–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç",
            "–î–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–µ–∑–∫–∏",
            "–¢–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏ üé® üåô",
            "–ß–∏—Å–ª–∞ –∏ —Å–∏–º–≤–æ–ª—ã: 123!@#"
        ])
        forms_layout.addWidget(combo)

        # Checkboxes
        forms_layout.addWidget(QLabel("–ß–µ–∫–±–æ–∫—Å—ã:"))
        forms_layout.addWidget(QCheckBox("–í–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é"))
        forms_layout.addWidget(QCheckBox("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å"))
        forms_layout.addWidget(QCheckBox("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"))

        layout.addWidget(forms_group)

        # Text section
        text_group = QGroupBox("üìÑ –¢–µ–∫—Å—Ç")
        text_layout = QVBoxLayout(text_group)

        # Different text styles
        text_layout.addWidget(QLabel("–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç"))
        text_layout.addWidget(QLabel("–ü–æ–ª—É–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç").setStyleSheet("font-weight: bold;"))
        text_layout.addWidget(QLabel("–ö—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç").setStyleSheet("font-style: italic;"))

        # Status labels
        status_layout = QVBoxLayout()
        status_layout.addWidget(QLabel("–°—Ç–∞—Ç—É—Å: ‚úÖ –ì–æ—Ç–æ–≤–æ"))
        status_layout.addWidget(QLabel("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"))
        status_layout.addWidget(QLabel("–û—à–∏–±–∫–∞: ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"))

        text_layout.addLayout(status_layout)

        layout.addWidget(text_group)

        layout.addStretch()
        return panel

    def create_right_panel(self):
        """Create right panel with lists and trees"""
        panel = QWidget()
        layout = QVBoxLayout(panel)

        # List section
        list_group = QGroupBox("üìã –°–ø–∏—Å–∫–∏")
        list_layout = QVBoxLayout(list_group)

        # Simple list
        list_layout.addWidget(QLabel("–ü—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫:"))
        simple_list = QListWidget()
        simple_list.addItems([
            "–≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ 1",
            "–≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ 2 —Å –¥–ª–∏–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º",
            "–≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ 3 üé®",
            "–≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ 4 (–≤—ã–±—Ä–∞–Ω–Ω—ã–π)",
            "–≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ 5"
        ])
        # Select one item for testing
        simple_list.setCurrentRow(3)
        list_layout.addWidget(simple_list)

        layout.addWidget(list_group)

        # Tree section
        tree_group = QGroupBox("üå≥ –î–µ—Ä–µ–≤–æ")
        tree_layout = QVBoxLayout(tree_group)

        tree_layout.addWidget(QLabel("–î–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤:"))
        tree = QTreeWidget()
        tree.setHeaderLabel("–§–∞–π–ª–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞")

        # Create tree structure
        root = QTreeWidgetItem(tree)
        root.setText(0, "üìÅ PhotoSorter_Project")

        src_folder = QTreeWidgetItem(root)
        src_folder.setText(0, "üìÅ src")

        ui_folder = QTreeWidgetItem(src_folder)
        ui_folder.setText(0, "üìÅ ui")

        files = ["main_window_simplified.py", "theme_manager.py", "photo_viewer.py"]
        for file in files:
            file_item = QTreeWidgetItem(ui_folder)
            file_item.setText(0, f"üìÑ {file}")

        tree.expandAll()
        tree_layout.addWidget(tree)

        layout.addWidget(tree_group)

        layout.addStretch()
        return panel

    def create_bottom_panel(self):
        """Create bottom panel with progress and tabs"""
        panel = QWidget()
        layout = QHBoxLayout(panel)

        # Progress section
        progress_group = QGroupBox("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å")
        progress_layout = QVBoxLayout(progress_group)

        progress_layout.addWidget(QLabel("–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤:"))
        progress_bar = QProgressBar()
        progress_bar.setValue(75)
        progress_layout.addWidget(progress_bar)

        progress_layout.addWidget(QLabel("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:"))
        progress_bar2 = QProgressBar()
        progress_bar2.setValue(45)
        progress_layout.addWidget(progress_bar2)

        layout.addWidget(progress_group)

        # Tab section
        tab_group = QGroupBox("üìë –í–∫–ª–∞–¥–∫–∏")
        tab_layout = QVBoxLayout(tab_group)

        tabs = QTabWidget()
        tab1 = QWidget()
        tab1_layout = QVBoxLayout(tab1)
        tab1_layout.addWidget(QLabel("üè† –ì–ª–∞–≤–Ω–∞—è - –ö–æ–Ω—Ç–µ–Ω—Ç –ø–µ—Ä–≤–æ–π –≤–∫–ª–∞–¥–∫–∏"))
        tab1_layout.addWidget(QPushButton("–ö–Ω–æ–ø–∫–∞ –Ω–∞ –ø–µ—Ä–≤–æ–π –≤–∫–ª–∞–¥–∫–µ"))

        tab2 = QWidget()
        tab2_layout = QVBoxLayout(tab2)
        tab2_layout.addWidget(QLabel("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ö–æ–Ω—Ç–µ–Ω—Ç –≤—Ç–æ—Ä–æ–π –≤–∫–ª–∞–¥–∫–∏"))
        tab2_layout.addWidget(QComboBox())
        tab2_layout.addWidget(QCheckBox("–¢–µ—Å—Ç–æ–≤—ã–π —á–µ–∫–±–æ–∫—Å"))

        tabs.addTab(tab1, "üè† –ì–ª–∞–≤–Ω–∞—è")
        tabs.addTab(tab2, "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

        tab_layout.addWidget(tabs)

        layout.addWidget(tab_group)

        return panel
